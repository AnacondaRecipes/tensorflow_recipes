{% set version = "2.4.1" %}

# This is the recipe for the "gpu" variant of tensorflow-base
package:
  name: tensorflow-base
  version: {{ version }}

source:
  fn: tensorflow-{{ version }}.tar.gz
  url: https://github.com/tensorflow/tensorflow/archive/v{{ version }}.tar.gz
  sha256: f681331f8fc0800883761c7709d13cda11942d4ad5ff9f44ad855e9dc78387e0
  patches:
    - 0001-do-not-include-B-usr-bin-flag.patch             # [linux]
    - tensorflow_win_zip64.patch                           # [win]
    # general patches
    - 0101-include-c-and-cc-headers.patch                  # [linus]
    - 0103-BUILD-changes-for-external-sqlite-package.patch # [linux]
    - 0104-Fixed-linking-error-in-conda-builds.patch        # [linux]
    - 0106-Upstream-patch-for-absl-error.patch             # [linux]
    - 0107-do-not-hardcode-ca-cert-location.patch          # [linux]
    # gpu specific patches
    - 0201-add-additional-cuda-rpaths.patch                # [linux]
    - 0202-Remove-extra-null-terminators.patch             # [linux]

build:
  number: 0
  string: gpu_py{{ CONDA_PY }}h{{PKG_HASH}}_{{ PKG_BUILDNUM }}
  skip: True  # [not x86_64]
  skip: True  # [win and vc<14]
  entry_points:
    - toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main
    - tflite_convert = tensorflow.lite.python.tflite_convert:main
    - toco = tensorflow.lite.python.tflite_convert:main
    - saved_model_cli = tensorflow.python.tools.saved_model_cli:main
    # The tensorboard package adds this entry point.
    # - tensorboard = tensorboard.main:run_main
    - tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main
    - estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # required here for all OS's, and ALSO below for windows
    - bazel
    - aws-sdk-cpp
    - nasm
  host:
    # conda build requirements for .sh scripts on win
    - posix     # [win]
    - m2-patch  # [win]
    - bazel     # [win]
    # requirements specified by the package itself
    - absl-py
    - astunparse
    - python-flatbuffers
    - gast
    - google-pasta
    - grpcio
    - h5py
    - keras-preprocessing
    # has run_exports, doesn't need a run dep below
    - mklml            # [win and tflow_variant == 'mkl']
    - numpy
    - opt_einsum
    # build only requirement, doesn't need a run dep below
    - pip
    - protobuf
    - python
    # build only requirement, doesn't need a run dep below
    - setuptools
    - scipy
    - six
    - typing_extensions  # [py<38]
    - sqlite
    # build only requirement, doesn't need a run dep below
    - swig
    - termcolor
    # >=0.26, but that's current, so a pin really isn't necessary.  Omit for maintenance.
    - wheel
    - wrapt
    # has run_exports, doesn't need a run dep below
    - zlib
    # GPU requirements
    - cudatoolkit {{ cudatoolkit }}*
    - cudnn {{ cudnn }}*
    - cupti  # [not win]

  run:
    - python
    # pin_compatible here is just to be lazy and define the dep versions in only one place.  These
    #    don't have binary compatibility issues.
    - {{ pin_compatible('absl-py', max_pin=None) }}
    - {{ pin_compatible('astunparse', max_pin='x.x.x') }}
    - {{ pin_compatible('gast', max_pin='x.x.x') }}
    - {{ pin_compatible('google-pasta', max_pin=None) }}
    - {{ pin_compatible('grpcio', max_pin=None) }}
    - {{ pin_compatible('h5py', max_pin='x.x') }}
    - {{ pin_compatible('keras-preprocessing', max_pin=None) }}
    - {{ pin_compatible('numpy') }}
    - {{ pin_compatible('opt_einsum', max_pin=None)}}
    - {{ pin_compatible('protobuf', max_pin=None) }}
    - {{ pin_compatible('scipy', max_pin=None) }}
    - {{ pin_compatible('six', max_pin=None) }}
    - {{ pin_compatible('termcolor', max_pin=None) }}
    - {{ pin_compatible('wrapt', max_pin=None) }}
    - {{ pin_compatible('cudatoolkit', max_pin='x.x') }}
    - {{ pin_compatible('cudnn') }}
    - cupti  # [not win]
    - typing_extensions  # [py<38]
    - python-flatbuffers

test:
  # the tensorflow import is tested by the run_test.sh script
  #imports:
  #  - tensorflow
  files:
    - gpu_test.py
  commands:
    - freeze_graph --help
    - saved_model_cli --help
    - tflite_convert --help     # [not win]
    - toco_from_protos --help   # [not win]
    - toco --help               # [not win]


about:
  home: http://tensorflow.org/
  license: Apache 2.0
  license_family: Apache
  summary: TensorFlow is a machine learning library, base GPU package, tensorflow only.
  description: |
    TensorFlow provides multiple APIs.The lowest level API, TensorFlow Core
    provides you with complete programming control.
    Base GPU package contains only tensorflow, not tensorflow-tensorboard.
  dev_url: https://github.com/tensorflow/tensorflow
  doc_url: https://www.tensorflow.org/get_started/get_started
  doc_source_url: https://github.com/tensorflow/tensorflow/tree/master/tensorflow/docs_src

extra:
  tflow_variant: {{ tflow_variant }}
