From 902da765ad535f95a649104187af3a65eb614d0e Mon Sep 17 00:00:00 2001
From: Nehal J Wani <nehaljw.kkd1@gmail.com>
Date: Sat, 25 Aug 2018 03:28:42 -0500
Subject: [PATCH 13/13] Add patch for eigen+cuda #19198

xxx\execroot\org_tensorflow\external\eigen_archive\eigen\src/Core/arch/CUDA/Half.h(212):
error: more than one instance of overloaded function "__hadd" matches
the argument list:
    function "__hadd(int, int)"
    function "__hadd(__half, __half)"
    argument types are: (const Eigen::half, const Eigen::half)

xref: https://github.com/tensorflow/tensorflow/issues/19198
xref: http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1526
xref: https://gist.github.com/bstriner/a7fb0a8da1f830900fa932652439ed44
---
 tensorflow/workspace.bzl     |  1 +
 third_party/eigen_half.patch | 22 ++++++++++++++++++++++
 2 files changed, 23 insertions(+)
 create mode 100644 third_party/eigen_half.patch

diff --git a/tensorflow/workspace.bzl b/tensorflow/workspace.bzl
index aaea475c04..185b773804 100755
--- a/tensorflow/workspace.bzl
+++ b/tensorflow/workspace.bzl
@@ -121,6 +121,7 @@ def tf_workspace(path_prefix = "", tf_repo_name = ""):
     tf_http_archive(
         name = "eigen_archive",
         build_file = clean_dep("//third_party:eigen.BUILD"),
+        patch_file = clean_dep("//third_party:eigen_half.patch"),
         sha256 = "d956415d784fa4e42b6a2a45c32556d6aec9d0a3d8ef48baee2522ab762556a9",
         strip_prefix = "eigen-eigen-fd6845384b86",
         urls = [
diff --git a/third_party/eigen_half.patch b/third_party/eigen_half.patch
new file mode 100644
index 0000000000..461e1c1550
--- /dev/null
+++ b/third_party/eigen_half.patch
@@ -0,0 +1,22 @@
+--- a/Eigen/src/Core/arch/CUDA/Half.h	2018-06-22 18:09:44.000000000 -0400
++++ b/Eigen/src/Core/arch/CUDA/Half.h	2018-07-25 01:19:55.462313100 -0400
+@@ -209,7 +209,7 @@
+ // conversion steps back and forth.
+ 
+ EIGEN_STRONG_INLINE __device__ half operator + (const half& a, const half& b) {
+-  return __hadd(a, b);
++  return __hadd(::__half(a), ::__half(b));
+ }
+ EIGEN_STRONG_INLINE __device__ half operator * (const half& a, const half& b) {
+   return __hmul(a, b);
+@@ -218,9 +218,7 @@
+   return __hsub(a, b);
+ }
+ EIGEN_STRONG_INLINE __device__ half operator / (const half& a, const half& b) {
+-  float num = __half2float(a);
+-  float denom = __half2float(b);
+-  return __float2half(num / denom);
++  return __hdiv(a, b);
+ }
+ EIGEN_STRONG_INLINE __device__ half operator - (const half& a) {
+   return __hneg(a);
-- 
2.19.0

